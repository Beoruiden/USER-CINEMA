import React, { useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import movies from "../data/movies";
import "../styles/seats.css";

const TICKET_PRICES = {
  normal: 50000,
  vip: 80000,
  couple: 120000,
};

const Booking = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const movie = movies.find((m) => String(m.id) === String(id));

  const [selectedSeats, setSelectedSeats] = useState([]);
  const [ticketType, setTicketType] = useState("normal");
  const [isBookingSuccess, setIsBookingSuccess] = useState(false);
  const [loading, setLoading] = useState(false);

  if (!movie) {
    return <div className="text-center text-red-500">Phim kh√¥ng t·ªìn t·∫°i</div>;
  }

  const handleSeatSelection = (seat) => {
    setSelectedSeats((prev) =>
      prev.includes(seat) ? prev.filter((s) => s !== seat) : [...prev, seat]
    );
  };

  const handleBooking = () => {
    if (selectedSeats.length === 0) {
      alert("Vui l√≤ng ch·ªçn √≠t nh·∫•t m·ªôt gh·∫ø!");
      return;
    }

    setLoading(true);
    setTimeout(() => {
      setLoading(false);
      setIsBookingSuccess(true);
      setTimeout(() => {
        navigate("/");
      }, 3000);
    }, 2000);
  };

  const totalPrice = selectedSeats.length * TICKET_PRICES[ticketType];

  return (
    <div className="container mx-auto p-6 text-white">
      <h1 className="text-3xl font-bold text-center mb-6">ƒê·∫∑t v√© - {movie.title}</h1>

      <div className="grid md:grid-cols-2 gap-6">
        {/* Th√¥ng tin phim */}
        <div className="bg-gray-900 p-6 rounded-lg shadow-lg">
          <img
            src={movie.poster}
            alt={movie.title}
            className="w-full h-96 object-cover rounded-md mb-4"
          />
          <h2 className="text-2xl font-bold">{movie.title}</h2>
          <p className="text-gray-400">{movie.genre} ‚Ä¢ {movie.duration} ph√∫t</p>
          <p><strong>ƒê·∫°o di·ªÖn:</strong> {movie.director}</p>
          <p><strong>Di·ªÖn vi√™n:</strong> {movie.cast.join(", ")}</p>
          <p><strong>Qu·ªëc gia:</strong> {movie.country}</p>
          <p><strong>Kh·ªüi chi·∫øu:</strong> {movie.releaseDate}</p>
          <p className="mt-2">{movie.description}</p>
          <a
            href={movie.trailer}
            target="_blank"
            rel="noopener noreferrer"
            className="block mt-4 text-blue-400 hover:underline"
          >
            üé¨ Xem trailer
          </a>
        </div>

        {/* Ch·ªçn gh·∫ø v√† ƒë·∫∑t v√© */}
        <div className="bg-gray-800 p-6 rounded-lg shadow-lg">
          <h2 className="text-xl font-semibold mb-4">Ch·ªçn gh·∫ø ng·ªìi</h2>

          {/* Ch·ªçn lo·∫°i v√© */}
          <div className="mb-4">
            <label className="mr-2">Lo·∫°i v√©:</label>
            <select
              value={ticketType}
              onChange={(e) => setTicketType(e.target.value)}
              className="p-2 border rounded text-black"
            >
              <option value="normal">V√© Th∆∞·ªùng - 50.000ƒë</option>
              <option value="vip">V√© VIP - 80.000ƒë</option>
              <option value="couple">V√© ƒê√¥i - 120.000ƒë</option>
            </select>
          </div>

          {/* Gh·∫ø ng·ªìi */}
          <div className="grid grid-cols-5 gap-2 mb-4">
            {Array.from({ length: 20 }, (_, index) => {
              const seatNumber = index + 1;
              return (
                <button
                  key={seatNumber}
                  className={`seat ${
                    selectedSeats.includes(seatNumber) ? "selected" : "available"
                  }`}
                  onClick={() => handleSeatSelection(seatNumber)}
                >
                  {seatNumber}
                </button>
              );
            })}
          </div>

          {/* T·ªïng ti·ªÅn */}
          <div className="text-lg font-bold mb-4">
            T·ªïng ti·ªÅn: <span className="text-yellow-400">{totalPrice.toLocaleString()}ƒë</span>
          </div>

          {/* N√∫t ƒë·∫∑t v√© */}
          <button
            onClick={handleBooking}
            className={`bg-red-600 px-4 py-2 rounded-md w-full ${
              loading ? "opacity-50 cursor-not-allowed" : ""
            }`}
            disabled={loading}
          >
            {loading ? "ƒêang x·ª≠ l√Ω..." : "X√°c nh·∫≠n ƒë·∫∑t v√©"}
          </button>

          {/* Th√¥ng b√°o ƒë·∫∑t v√© th√†nh c√¥ng */}
          {isBookingSuccess && (
            <div className="bg-green-500 text-white text-center p-4 rounded-md mt-4">
              ‚úÖ ƒê·∫∑t v√© th√†nh c√¥ng! B·∫°n s·∫Ω ƒë∆∞·ª£c chuy·ªÉn v·ªÅ trang ch·ªß sau 3 gi√¢y...
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default Booking;
